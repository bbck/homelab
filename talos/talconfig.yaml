---
clusterName: homelab
talosVersion: v1.10.5
endpoint: https://192.168.254.40:6443
cniConfig:
  name: none
allowSchedulingOnControlPlanes: true
nodes:
  - hostname: rk1-1
    ipAddress: 192.168.254.41
    controlPlane: true
    installDisk: /dev/nvme0n1
    networkInterfaces:
      - interface: end0
        addresses:
          - 192.168.254.41/24
        routes: &routes
          - network: 0.0.0.0/0
            gateway: 192.168.254.2
            metric: 1024
        vip: &vip
          ip: 192.168.254.40
    nameservers: &nameservers
      - 1.1.1.1
      - 1.0.0.1
    certSANs:
      - 192.168.254.41
      - 192.168.254.40
    nodeLabels:
      topology.kubernetes.io/zone: "ether4"
    schematic:
      overlay: &rk1
        image: siderolabs/sbc-rockchip
        name: turingrk1
      customization: &customization
        extraKernelArgs:
          - cpufreq.default_governor=performance
          - mitigations=off
          - -selinux
          - i915.enable_guc=3
        systemExtensions:
          officialExtensions:
            - siderolabs/i915
            - siderolabs/iscsi-tools
            - siderolabs/util-linux-tools
  - hostname: rk1-2
    ipAddress: 192.168.254.42
    controlPlane: true
    installDisk: /dev/nvme0n1
    networkInterfaces:
      - interface: end0
        addresses:
          - 192.168.254.42/24
        routes: *routes
        vip: *vip
    nameservers: *nameservers
    certSANs:
      - 192.168.254.42
      - 192.168.254.40
    nodeLabels:
      topology.kubernetes.io/zone: "ether4"
    schematic:
      overlay: *rk1
      customization: *customization
  - hostname: rk1-3
    ipAddress: 192.168.254.43
    controlPlane: true
    installDisk: /dev/nvme0n1
    networkInterfaces:
      - interface: end0
        addresses:
          - 192.168.254.43/24
        routes: *routes
        vip: *vip
    nameservers: *nameservers
    certSANs:
      - 192.168.254.43
      - 192.168.254.40
    nodeLabels:
      topology.kubernetes.io/zone: "ether4"
    schematic:
      overlay: *rk1
      customization: *customization
  - hostname: rk1-4
    ipAddress: 192.168.254.44
    installDisk: /dev/nvme0n1
    networkInterfaces:
      - interface: end0
        addresses:
          - 192.168.254.44/24
        routes: *routes
    nameservers: *nameservers
    nodeLabels:
      topology.kubernetes.io/zone: "ether4"
    schematic:
      overlay: *rk1
      customization: *customization
  - hostname: eq12
    ipAddress: 192.168.254.45
    installDisk: /dev/nvme0n1
    networkInterfaces:
      - interface: enp1s0
        addresses:
          - 192.168.254.45/24
        routes: *routes
    nameservers: *nameservers
    nodeLabels:
      topology.kubernetes.io/zone: "ether6"
    schematic:
      customization: *customization
  - hostname: eq14
    ipAddress: 192.168.254.46
    installDisk: /dev/nvme0n1
    networkInterfaces:
      - interface: enp1s0
        addresses:
          - 192.168.254.46/24
        routes: *routes
    nameservers: *nameservers
    nodeLabels:
      topology.kubernetes.io/zone: "ether5"
    schematic:
      customization: *customization
controlPlane:
  patches:
    # Disable Pod Security Admission
    - |-
      cluster:
        apiServer:
          disablePodSecurityPolicy: true
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl
    # Allow metric collection
    - |-
      cluster:
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
    # Disable CoreDNS
    - |-
      cluster:
        coreDNS:
          disabled: true
    # Disable kube-proxy in favor of Cilium
    - |-
      cluster:
        proxy:
          disabled: true
    # NFS mount options
    - &nfsPatch |-
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.2
              hard=True
              nconnect=8
    # Setup mount for longhorn
    - &longhornPatch |-
      machine:
        kubelet:
          extraMounts:
            - destination: /var/lib/longhorn
              type: bind
              source: /var/lib/longhorn
              options:
                - bind
                - rshared
                - rw
worker:
  patches:
    - *nfsPatch
    - *longhornPatch
