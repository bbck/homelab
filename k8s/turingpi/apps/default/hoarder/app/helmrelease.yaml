---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: hoarder
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 1m
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
    controllers:
      hoarder:
        replicas: 1
        containers:
          web:
            image:
              repository: ghcr.io/hoarder-app/hoarder
              tag: "0.20.0"
              pullPolicy: IfNotPresent
            env:
              MEILI_ADDR: http://hoarder-meilisearch:7700
              BROWSER_WEB_URL: http://hoarder-chrome:9222
              DATA_DIR: /data
              NEXTAUTH_URL: https://hoarder.${CLUSTER_DOMAIN}
              # Workaround for s6-overlay on read only filesystem
              S6_READ_ONLY_ROOT: "1"
            envFrom:
              - secretRef:
                  name: hoarder
            resources:
              limits:
                memory: 500Mi
              requests:
                cpu: 100m
                memory: 128Mi
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
            securityContext:
              # Unfortuantly the container currently cannot run as non-root
              # https://github.com/hoarder-app/hoarder/issues/606
              runAsUser: 0
              runAsGroup: 0
              runAsNonRoot: false
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
          chrome:
            image:
              repository: ghcr.io/zenika/alpine-chrome
              tag: "124"
              pullPolicy: IfNotPresent
            command:
              - chromium-browser
              - --headless
              - --no-sandbox
              - --disable-gpu
              - --disable-dev-shm-usage
              - --remote-debugging-address=0.0.0.0
              - --remote-debugging-port=9222
              - --hide-scrollbars
            resources:
              limits:
                memory: 500Mi
              requests:
                cpu: 100m
                memory: 128Mi
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
          meilisearch:
            image:
              repository: getmeili/meilisearch
              tag: "v1.11.1"
              pullPolicy: IfNotPresent
            env:
              MEILI_NO_ANALYTICS: "true"
            envFrom:
              - secretRef:
                  name: hoarder
            resources:
              limits:
                memory: 128Mi
              requests:
                cpu: 50m
                memory: 64Mi
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: ["ALL"]
    service:
      web:
        controller: hoarder
        ports:
          http:
            port: 3000
      chrome:
        controller: hoarder
        ports:
          http:
            port: 9222
      meilisearch:
        controller: hoarder
        ports:
          http:
            port: 7700
    ingress:
      hoarder:
        className: nginx
        hosts:
          - host: hoarder.${CLUSTER_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: web
                  port: http
        annotations:
          external-dns.alpha.kubernetes.io/target: nginx.${CLUSTER_DOMAIN}
    persistence:
      data:
        existingClaim: hoarder
        advancedMounts:
          hoarder:
            web:
              - path: /data
                subPath: data
            meilisearch:
              - path: /meili_data
                subPath: meili_data
      cache:
        type: emptyDir
        advancedMounts:
          hoarder:
            web:
              - path: /app/apps/web/.next/cache
    secrets:
      hoarder:
        stringData:
          NEXTAUTH_SECRET: ${HOARDER_NEXTAUTH_SECRET}
          OPENAI_API_KEY: ${HOARDER_OPENAI_API_KEY}
          MEILI_MASTER_KEY: ${HOARDER_MEILI_MASTER_KEY}
