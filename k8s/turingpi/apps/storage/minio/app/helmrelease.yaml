---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 30m
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile: { type: RuntimeDefault }
    controllers:
      minio:
        replicas: 1
        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2025-04-22T22-12-26Z
            env:
              TZ: America/Los_Angeles
              MINIO_UPDATE: off
              MINIO_BROWSER_REDIRECT_URL: https://minio.${CLUSTER_DOMAIN}
              MINIO_SERVER_URL: https://s3.${CLUSTER_DOMAIN}
              MINIO_PROMETHEUS_AUTH_TYPE: public
              MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_PROMETHEUS_URL: http://prometheus-operated.monitoring.svc.cluster.local:9090
            envFrom:
              - secretRef:
                  name: minio-secret
            args:
              - server
              - /data 
              - --console-address
              - :9001
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: 9000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probe
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    service:
      app:
        controller: minio
        ports:
          http:
            port: 9001
          s3:
            port: 9000
    ingress:
      app:
        className: internal
        hosts:
          - host: minio.${CLUSTER_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
          - host: s3.${CLUSTER_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: s3
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${CLUSTER_DOMAIN}
    serviceMonitor:
      app:
        serviceName: minio
        endpoints:
          - port: s3
            scheme: http
            path: /minio/v2/metrics/cluster
            interval: 1m
            scrapeTimeout: 10s
    persistence:
      config:
        type: nfs
        server: 192.168.254.47
        path: /mnt/nas/minio
        globalMounts:
          - path: /data
